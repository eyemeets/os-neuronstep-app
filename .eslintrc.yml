overrides:
  - files:
      - "*.ts"
      - "*.tsx"
      - "!src/"
    parser: '@typescript-eslint/parser'
    rules:
      no-unused-vars: 'off'
      no-undef: 'off'
      '@typescript-eslint/no-unused-vars': 'off'

extends:
  - 'plugin:import/typescript'
  - 'plugin:@typescript-eslint/recommended'
  - 'plugin:react/recommended'       # Added for React/JSX linting
  - 'plugin:react-native/all'        # Added for React Native linting

settings:
  import/resolver:
    node:
      extensions:
        - .js
        - .ts
        - .mjs
        - .tsx                    # Added .tsx for React Native
        - .d.ts
  react:
    version: 'detect'              # Automatically detects React version

rules:
  # TypeScript specific rules
  import/named: 'off'
  '@typescript-eslint/ban-ts-comment':
    - error
    - ts-ignore: allow-with-description
  '@typescript-eslint/member-delimiter-style':
    - error
    - multiline:
        delimiter: none
  '@typescript-eslint/type-annotation-spacing':
    - error
    - {}
  '@typescript-eslint/consistent-type-imports':
    - error
    - prefer: type-imports
      disallowTypeAnnotations: false
  '@typescript-eslint/consistent-type-definitions':
    - error
    - interface
  '@typescript-eslint/prefer-ts-expect-error': error
  no-useless-constructor: 'off'
  indent: 'off'
  '@typescript-eslint/indent':
    - error
    - 2
    - SwitchCase: 1
      VariableDeclarator: 1
      outerIIFEBody: 1
      MemberExpression: 1
      FunctionDeclaration:
        parameters: 1
        body: 1
      FunctionExpression:
        parameters: 1
        body: 1
      CallExpression:
        arguments: 1
      ArrayExpression: 1
      ObjectExpression: 1
      ImportDeclaration: 1
      flatTernaryExpressions: false
      ignoreComments: false
      ignoredNodes:
        - TemplateLiteral *
      offsetTernaryExpressions: true
  no-unused-vars: 'off'
  '@typescript-eslint/no-unused-vars':
    - error
    - argsIgnorePattern: ^_
  no-redeclare: 'off'
  '@typescript-eslint/no-redeclare': error
  no-use-before-define: 'off'
  '@typescript-eslint/no-use-before-define':
    - error
    - functions: false
      classes: false
      variables: true
  brace-style: 'off'
  '@typescript-eslint/brace-style':
    - error
    - stroustrup
    - allowSingleLine: true
  '@typescript-eslint/comma-dangle':
    - error
    - never
  object-curly-spacing: 'off'
  '@typescript-eslint/object-curly-spacing':
    - error
    - always
  semi: 'off'
  '@typescript-eslint/semi':
    - 'error'
    - 'never'
  'no-trailing-spaces': error
  quotes: 'off'
  '@typescript-eslint/quotes':
    - error
    - single
  space-before-blocks: 'off'
  '@typescript-eslint/space-before-blocks':
    - error
    - always
  space-before-function-paren: 'off'
  '@typescript-eslint/space-before-function-paren':
    - error
    - anonymous: always
      named: never
      asyncArrow: always
  space-infix-ops: 'off'
  '@typescript-eslint/space-infix-ops': error
  keyword-spacing: 'off'
  '@typescript-eslint/keyword-spacing':
    - error
    - before: true
      after: true
  comma-spacing: 'off'
  '@typescript-eslint/comma-spacing':
    - error
    - before: false
      after: true
  no-extra-parens: 'off'
  '@typescript-eslint/no-extra-parens':
    - error
    - functions
  no-dupe-class-members: 'off'
  '@typescript-eslint/no-dupe-class-members': error
  no-loss-of-precision: 'off'
  '@typescript-eslint/no-loss-of-precision': error
  lines-between-class-members: 'off'
  '@typescript-eslint/lines-between-class-members':
    - error
    - always
    - exceptAfterSingleLine: true
  '@typescript-eslint/consistent-indexed-object-style': 'off'
  '@typescript-eslint/naming-convention': 'off'
  '@typescript-eslint/explicit-function-return-type': 'off'
  '@typescript-eslint/explicit-member-accessibility': 'off'
  '@typescript-eslint/no-explicit-any': 'off'
  '@typescript-eslint/parameter-properties': 'off'
  '@typescript-eslint/no-empty-interface': 'off'
  '@typescript-eslint/ban-ts-ignore': 'off'
  '@typescript-eslint/no-empty-function': 'off'
  '@typescript-eslint/no-non-null-assertion': 'off'
  '@typescript-eslint/explicit-module-boundary-types': 'off'
  '@typescript-eslint/ban-types': 'off'
  '@typescript-eslint/no-namespace': 'off'
  '@typescript-eslint/triple-slash-reference': 'off'

  # React-specific rules
  'react/prop-types': 'off'
  'react/react-in-jsx-scope': 'off'

  # React Native-specific rules
  'react-native/no-unused-styles': 'error'
  'react-native/split-platform-components': 'error'
  'react-native/no-inline-styles': 'warn'
  'react-native/no-color-literals': 'warn'
  'react-native/no-raw-text': 'error'
  'react-native/sort-styles': 'off'
